/*
 * MIT License
 *
 * Copyright (c) 2025 OmniMC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import net.thebugmc.gradle.sonatypepublisher.PublishingType

plugins {
    id 'java'
    id("net.thebugmc.gradle.sonatype-central-portal-publisher") version "1.2.4"
}

group = 'org.omnimc'
version = project.findProperty("version") ?: "1.0.0-SNAPSHOT-BUILD-ONLY" // version 1.1.0

repositories {
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    testImplementation 'dev.7ori:RuntimeProfiler:1.1.0'
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    //noinspection GroovyAssignabilityCheck
    useInMemoryPgpKeys(signingKey, signingPassword)
}

centralPortal {
    if (version.toString().endsWith("BUILD-ONLY")) {
        throw new GradleException("You cannot publish a build-only version. You may have not set the version.")
    }

    username = mavenCentralUsername
    password = mavenCentralPassword

    name = "jvmzip"

    publishingType = PublishingType.USER_MANAGED // This is so we can manually review a release before published.

    pom {
        name = "JVMZip"
        description = "An ultra lightweight and fast zip parsing library."
        url = "https://www.omnimc.org"

        organization {
            name = "OmniMC"
            url = "https://www.omnimc.org"
        }

        developers {
            developer {
                id = "caden"
                name = "Caden"
                url = "https://github.com/CadenCCC"
            }
        }

        licenses {
            license {
                name = "MIT License"
            }
        }

        scm {
            connection = 'scm:git:git://github.com/OmniModLoader/jvmzip.git'
            developerConnection = 'scm:git:ssh://github.com:OmniModLoader/jvmzip.git'
            url = 'https://github.com/OmniModLoader/jvmzip'
        }
    }
}

test {
    useJUnitPlatform()
}